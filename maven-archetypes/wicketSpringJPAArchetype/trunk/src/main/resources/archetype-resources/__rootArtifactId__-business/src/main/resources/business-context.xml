<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

  	<!-- This element is used to enable autodetection of the stereotyped classes in the base package defined. -->
	<context:component-scan base-package="${package}.biz" />
	
	<!-- This element is used to automatically register all of Spring's standard post-processors for annotation-based configuration. -->
	<context:annotation-config />

	<!-- The Spring provided JPA transaction manager. The JpaTransactionManager is responsible for creating EntityManagers opening transactions 
		and binding them to the current thread context. -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
    	<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<!-- This element enables the configuration of transactional behavior based on annotations. The <tx:annotation-driven /> simply tells Spring 
		to put transactional advice on any class or method that has an @Transactional annotation on it. This allows us to write DAO logic without 
		having to worry about transactional semantics. -->
	<tx:annotation-driven proxy-target-class="true" />
</beans>