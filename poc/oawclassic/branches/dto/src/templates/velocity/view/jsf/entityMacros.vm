##Generates attributes for the given class and all its components
#macro(generateAttributesForClass $cls $clsName)
	         		#generateAttributes($cls $clsName)
		  	       
		  	        ## get all the embeddable components 
		  	       #set($componentMap = ${manager.getComponents($cls).get("components")} )
  	       
		  	       #foreach( $component in ${componentMap.keySet()} )
		  	        #set($compClass = ${componentMap.get($component)})
		  	        #set($compName = "$clsName.${component}")			
		  	        #generateAttributes(  $compClass $compName )
		  	       			#end
		  	       			
		  	       			 			## get all the associations 
		  	       			 #set($associationsMap = ${manager.getComponents($cls).get("associations")} )
		  	       			 #foreach( $assocName in ${associationsMap.keySet()} )			
		  	         #assocInputHtm($assocName $clsName)
		  	       			 #end
#end

#macro( generateAttributes $cls $clsName )
	  			#foreach( $attribute in $cls.Attribute())			
		  	  #attributeInputHtm($attribute $clsName )     			  
		  				#end
#end 

## e.g values attribute - city clsName - customer.primaryAddress component-primaryAddress 
#macro( attributeInputHtm $attribute $clsName )
		    <h:outputText value="${utils.getViewLabel($attribute)}" styleClass="formLabel" /> 
    <${manager.getInputComponentType($attribute)} id="${clsName.replace('.', '_')}_${attribute.NameS()}" value="#{${utils.asVariable($clazz.NameS() )}CrudBacking.$clsName.${attribute.NameS()}}" ${utils.getRequired($attribute)} >
    			  ${manager.getInputComponentContent($attribute)}
    </${manager.getInputComponentType($attribute)}> 
    <h:message for="${clsName.replace('.', '_')}_${attribute.NameS()}" styleClass="errMessage" />
#end 

## e.g values attribute - city clsName - customer.primaryAddress component-primaryAddress 
#macro( assocInputHtm $assocName $clsName )
		    <h:outputText value="${utils.getViewLabel($assocName)}" styleClass="formLabel" /> 
    <h:inputText id="${clsName.replace('.', '_')}_$assocName" value="#{${utils.asVariable($clazz.NameS() )}CrudBacking.$clsName.${assocName}.id}" ${utils.getRequired($attribute)} /> 
    <h:message for="${clsName.replace('.', '_')}_$assocName" styleClass="errMessage" />
#end 