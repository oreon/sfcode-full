<?xml version="1.0" encoding="UTF-8"?>
<persistence version="1.0"
   xmlns="http://java.sun.com/xml/ns/persistence" 
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="
      http://java.sun.com/xml/ns/persistence
      http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd">
   <persistence-unit name="widgets">
      <!-- You can force a non-default JPA provider using one of these declarations -->
      <!--
      <provider>org.hibernate.ejb.HibernatePersistence</provider>
      <provider>org.eclipse.persistence.jpa.PersistenceProvider</provider>
      -->

      <!-- Use this data source name for JBoss AS -->
      <!--   <jta-data-source>java:DefaultDS</jta-data-source> -->
      
      	<!-- USES THE JBOSS DEFAULT IN-MEMORY DS -->
		<jta-data-source>java:jboss/datasources/ExampleDS</jta-data-source>
		<properties>
			<property name="hibernate.dialect" value="org.hibernate.dialect.HSQLDialect" />
			<property name="hibernate.hbm2ddl.auto" value="create-drop" />
			<property name="hibernate.show-sql" value="true" />
		</properties>
      
      
      <!-- Use this data source name for Glassfish -->
      <!--
      <jta-data-source>jdbc/__default</jta-data-source>
      -->
      <!--  
      <properties>
      
         <property name="hibernate.hbm2ddl.auto" value="create-drop"/>
         <property name="hibernate.show_sql" value="true"/>
         <property name="hibernate.transaction.flush_before_completion" value="true"/>
         <property name="hibernate.cache.provider_class" value="org.hibernate.cache.HashtableCacheProvider"/>

       
         <property name="eclipselink.ddl-generation" value="drop-and-create-tables"/>
         <property name="eclipselink.logging.level" value="FINE"/>

      </properties>
      -->
   </persistence-unit>
</persistence>
