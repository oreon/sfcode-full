«EXTENSION template::GeneratorExtensions»

«DEFINE Root FOR uml::Model»
«EXPAND PackageRoot FOREACH allOwnedElements().typeSelect(uml::Package)»
«ENDDEFINE»

«DEFINE PackageRoot FOR uml::Package»

«EXPAND ClassRoot FOREACH allOwnedElements().typeSelect(uml::Class)»

«ENDDEFINE»

«DEFINE PackageRoot FOR uml::Comment»
«ENDDEFINE»

«DEFINE PackageRoot FOR uml::PackageImport»
«ENDDEFINE»

«DEFINE PackageRoot FOR uml::ProfileApplication»
«ENDDEFINE»


«DEFINE ClassRoot FOR uml::Class»
«FILE package.name.packagePath() +"/" +name+".java"»
package « package.name »;
public class «name» «parents().size > 0 ?" extends " + parents().get(0).name:""»{

«EXPAND genDecl FOREACH getAllAttributes() »
«EXPAND genGetterSetter FOREACH getAllAttributes() »


}
«ENDFILE»

«ENDDEFINE»


«DEFINE ClassRoot FOR wcprofile::Entity»
«FILE package +"/" +name+".java"»
package « package().name »;
@Entity(tn=«tableName»)
public class «name» «parents().size > 0 ?" extends " + parents().get(0):""»{
	«EXPAND gen FOREACH ownedElement »
}
«ENDFILE»

«ENDDEFINE»

«DEFINE gen FOR uml::Operation»
	«name»;
«ENDDEFINE»

«DEFINE gen FOR uml::Generalization»
«ENDDEFINE»

«DEFINE gen FOR wcprofile::NamedQuery»
	@nq(value=«name»)
	«visibility» «type.name» «name» (){ }
«ENDDEFINE»


«DEFINE genDecl FOR uml::Property»
	private «type.name» «name»;
«ENDDEFINE»


«DEFINE genGetterSetter FOR uml::Property»
	public void set«name.toFirstUpper()»(«type.name» «name»){
		this.«name» = «name»;
	}
	
	public «type.name» get«name.toFirstUpper()»( ){
		return «name»;
	}
«ENDDEFINE»


