«IMPORT wcprofile»

«EXTENSION org::openarchitectureware::uml2::profile::profiling»
«EXTENSION template::GeneratorExtensions»
«EXTENSION template::webExtensions»

«DEFINE genEditView(boolean edit) FOR uml::Class»
	«setCurrentEditMode(edit)» 
	«FILE getWebPath() +"/" + (edit?"edit":"view") + name+ "." + getExtension()»
<ui:composition «EXPAND WebRoot::genIncludes-»
	template = "«getTemplate()»" >	
	<ui:define name="content">
	<ice:panelGroup id="editanswerchoiceGroupId"
				styleClass="formBorderHighlight">
	<div class="entry errors"><h:messages globalOnly="true" /></div>
	
		<ice:form>
			<s:validateAll>
			<h:panelGrid columns="3">
		«setAsCurrentEntity(this)-»
		«EXPAND genAttribAsOutput FOR this-»
			</h:panelGrid>
			</s:validateAll>
			«EXPAND genCancelSaveBtns(edit) FOR this»
		</ice:form>
		</ice:panelGroup>
	</ui:define> 
</ui:composition>
	«ENDFILE»
«ENDDEFINE»


«DEFINE genCancelSaveBtns(boolean edit) FOR uml::Class»
	<div class="buttonBox">
		«IF !edit»
		<h:commandButton value="Edit"  action="edit" /> 
		<h:commandButton value="Back To Listing" immediate="true" action="#{«getAction()».cancel}" /> 
		«ELSE»
		<h:commandButton value="Save" action="#{«getAction()».save}" /> 
		<h:commandButton value="Cancel" immediate="true" action="#{«getAction()».cancel}" /> 
		«ENDIF»
	</div>
«ENDDEFINE»

«DEFINE genAttribAsOutput FOR uml::Class-»
	«FOREACH allParents() AS e-»
			«EXPAND genAttribute FOREACH e.getAllAttributes().select(a|!a.isMultivalued()) -»
	«ENDFOREACH»
	«EXPAND genAttribute FOREACH getAllAttributes().select(a|!a.isMultivalued()) -»
	
	«FOREACH allParents() AS e-»
			«EXPAND gentEditableTable FOREACH e.getAllAttributes().select(a|a.isMultivalued() && a.association != null) -»
	«ENDFOREACH»
	«EXPAND gentEditableTable FOREACH getAllAttributes().select(a|a.isMultivalued() && a.association != null) -»
«ENDDEFINE»

«DEFINE genAttribute FOR uml::Property -»
	«IF association == null || opposite.type.name != getCurrentEntity().name»
	«IF association != null -»
		«IF type.isEmbeddable()-»
			«type.setCurrentEmbeddable()»
			«EXPAND genAttribAsOutput FOR this.type-»
		«ELSE»
			«EXPAND genAssociation FOR this-»
		«ENDIF»
	«ELSE-»
		«EXPAND genProperty FOR this»
	«ENDIF»
	«ENDIF»
«ENDDEFINE»

«DEFINE genProperty FOR uml::Property-»
	«getOutputMessage()»
	«EXPAND genPropertyEntry(type) FOR this-»
	«getErrorMessageHolder()»
	«isCurrentMultiMode()?"</h:column>":""»
«ENDDEFINE»

«DEFINE genAssociation FOR uml::Property -»
	«getOutputMessage()»
	«IF !isCurrentEditMode()»
	<«getText()» value="#{«getCurrentEntity().asVar()».«class.isEmbeddable()?getCurrentEmbeddable().asVar() + ".":""»«name.toFirstLower()».displayName}" />
	«ELSE»
	<h:selectOneMenu id="«getId()»" value="#{«getCurrentEntity().asVar()».«name»}" required="«!getAssocOptional()»">
		<s:selectItems value="#{«type.asVar()»List}" var="itemIter"
			label="#{itemIter.displayName}"
			noSelectionLabel="Please Select..." />
		<s:convertEntity />
	</h:selectOneMenu>
	«getErrorMessageHolder()»
	«ENDIF»
	«isCurrentMultiMode()?"</h:column>":""»
«ENDDEFINE»

«DEFINE genPropertyEntry(uml::PrimitiveType cls) FOR uml::Property-»
«IF type.name == "imageFile"»
	«getTextForImgFile()» 
«ELSE»
	<«getText()»  id="«getId()»" required="«getRequired()»"  value="#{«getCurrentEntity().asVar()».«class.isEmbeddable()?getCurrentEmbeddable().asVar() + ".":""»«name.toFirstLower()»}" />
«ENDIF»   
«ENDDEFINE»

«DEFINE genPropertyEntry(wcprofile::dataTypes::imageFile cls) FOR uml::Property-»
	«getTextForImgFile()»
«ENDDEFINE»


«DEFINE genPropertyEntry(uml::Enumeration enm) FOR uml::Property-»
	«IF !isCurrentEditMode()»
	<«getText()» id="«getId()»" value="#{«getCurrentEntity().asVar()».«class.isEmbeddable()?getCurrentEmbeddable().asVar() + ".":""»«name.toFirstLower()»}" />
	«ELSE»
	<h:selectOneMenu id="«getId()»" value="#{«getCurrentEntity().asVar()».«name»}" required="«getAssocOptional()»">
		<f:selectItem itemLabel="Please Select..." />
		«FOREACH  enm.ownedLiteral AS e-»
		<f:selectItem itemLabel="«e.name»" itemValue="«e.name-»" />
		«ENDFOREACH»
	</h:selectOneMenu>
	«ENDIF»
«ENDDEFINE»


«DEFINE gentEditableTable FOR uml::Property-»
	«setCurrentMultiMode(true)-»
	<h:dataTable id="«name»_data" var="«type.asVar()»" rowIndexVar="rowIndex" 
					value="#{«getCurrentEntity().asVar()».«name»}" rows="10"
				rowClasses="odd, even" styleClass="dataTable" rules="all">
		«setAsCurrentEntity(type)»
		«EXPAND genAttribAsOutput FOR type-»		
	</h:dataTable>
	«setCurrentMultiMode(false)-»
«ENDDEFINE»
