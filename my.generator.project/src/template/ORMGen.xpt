«IMPORT wcprofile»

«EXTENSION org::openarchitectureware::uml2::profile::profiling»
«EXTENSION template::GeneratorExtensions»
«EXTENSION template::associationExtensions»

«REM»comment
«DEFINE Root FOR uml::Model»
	«EXPAND Root FOREACH allOwnedElements().typeSelect(uml::Package)»
«ENDDEFINE»
«ENDREM»

«DEFINE Root FOR uml::Model»
	«FILE "../resources/META-INF/orm.xml"-»
<?xml version="1.0" encoding="UTF-8" ?>
<entity-mappings xmlns="http://java.sun.com/xml/ns/persistence/orm"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/persistence/orm http://java.sun.com/xml/ns/persistence/orm_1_0.xsd"
	version="1.0">
	<description></description>
	
	«EXPAND GenerateEntityMapping FOREACH allOwnedElements().typeSelect(wcprofile::Entity)»
	«EXPAND genMetaData FOR this»
	
</entity-mappings>
	«ENDFILE»
«ENDDEFINE»


«DEFINE genMetaData FOR uml::Model»
«FILE getTopLevelPackagePath(allOwnedElements().typeSelect(wcprofile::Entity).get(0)) +"/MetaData.java"»
package «getTopLevelPackage(allOwnedElements().typeSelect(wcprofile::Entity).get(0))»;

public class MetaData{

public static final String[][] ARR_FIELDS = {
«FOREACH allOwnedElements().typeSelect(wcprofile::Entity) AS e»
	{ "«e.fqn()»",  
		«FOREACH e.getAttribs() AS a»
			"«a.name»",
		«ENDFOREACH»
	},
«ENDFOREACH»
};

}
«ENDFILE»
«ENDDEFINE»



«DEFINE GenerateEntityMapping FOR wcprofile::Entity»
	<!--  «name»  JPA Configurations -->
	<entity class="«fqn()»" name="«name»">
		<table name="«getTableName()»"  >
		«IF uniqueConstraints != null-»
			<unique-constraint>
			«FOREACH uniqueConstraints.getAsList() AS e-»
				<column-name>«e.trim()-»</column-name>
			«ENDFOREACH-»
			</unique-constraint>
		«ENDIF»
		</table>
 	«EXPAND genOperation FOREACH getAllOperations()»
 	«EXPAND genFindQry FOREACH getAllAttributes()»
	</entity>
«ENDDEFINE»


«DEFINE genOperation FOR uml::Operation» «ENDDEFINE»


«DEFINE genOperation FOR wcprofile::NamedQueryOp»
	«IF name != null»
	<named-query name="«name-»">
		<query>
			<![CDATA[
			«query»
			]]>
		</query>
	</named-query>
	«ENDIF»
«ENDDEFINE»



«DEFINE genFindQry FOR uml::Property»
	«IF isUnq() »
	<named-query name="«class.name.toFirstLower()».findByUnq«name.toFirstUpper()-»">
		<query>
			<![CDATA[
			select u from «class.name» u where u.«name» = ?1
			]]>
		</query>
	</named-query>
	«ENDIF»
«ENDDEFINE»

