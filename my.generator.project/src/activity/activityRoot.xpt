«IMPORT uml2»
«IMPORT wcprofile»

«EXTENSION org::openarchitectureware::uml2::profile::profiling»
«EXTENSION template::GeneratorExtensions»


«DEFINE Root FOR uml::Model»
	«EXPAND StateMachineRoot FOREACH allOwnedElements().typeSelect(uml::Activity)»
	«EXPAND WorkflowActionRoot::StateMachineRoot FOREACH allOwnedElements().typeSelect(uml::Activity)»
«ENDDEFINE»



«DEFINE StateMachineRoot FOR uml::Activity»
	«FILE "../resources/processes/" + name + "/processdefinition.xml" -»
<?xml version="1.0" encoding="UTF-8"?>

<process-definition xmlns="" name="«name»">
	«EXPAND gen FOREACH allOwnedElements().typeSelect(uml::ActivityPartition)»
	«EXPAND gen FOREACH allOwnedElements().typeSelect(uml::InitialNode)»
	«EXPAND genAction FOREACH allOwnedElements().typeSelect(uml::Action)»
	«EXPAND gen FOREACH allOwnedElements().typeSelect(uml::ActivityFinalNode)»
</process-definition>
	«ENDFILE»
«ENDDEFINE»

«DEFINE gen FOR uml::ActivityPartition»
<swimlane name="«name»">
	<assignment actor-id="#{actior.id}"></assignment>
</swimlane>
«ENDDEFINE»

«DEFINE genAction FOR uml::Action»
	<task-node name="«name»">
		<task name="«name»Task" swimlane="«getSwimlane()»">
		</task>
		«FOREACH outgoing() AS o-»
		<transition to="«o.target.name»" name="«o.guard.stringValue()»"></transition>
		«ENDFOREACH»
	</task-node>
«ENDDEFINE»

«DEFINE genAction FOR wcprofile::Task»
	<task-node name="«name»">
		<task name="«name»Task" swimlane="«getSwimlane()»" notify=«getNofity()»>
		</task>
		«FOREACH outgoing() AS o-»
		<transition to="«o.target.name»" name="«o.guard.stringValue()»"></transition>
		«ENDFOREACH»
	</task-node>`
«ENDDEFINE»


«DEFINE gen FOR uml::InitialNode»
 	<start-state name="«name»">
		<task name="«name»Task" swimlane="«getSwimlane()»">
		</task>
		«FOREACH outgoing() AS o-»
		<transition to="«o.target.name»" name="«o.guard.stringValue()»"></transition>
		«ENDFOREACH»
	</task-node>
 «ENDDEFINE»


 «DEFINE gen FOR uml::ActivityFinalNode»
 	<end-state name="«name»"></end-state>
 «ENDDEFINE»

