«IMPORT wcprofile»

«EXTENSION org::openarchitectureware::uml2::profile::profiling»
«EXTENSION template::GeneratorExtensions»
«EXTENSION template::webExtensions»
«EXTENSION template::associationExtensions»


«DEFINE Root FOR uml::Model»
	«EXPAND StateMachineRoot FOREACH allOwnedElements().typeSelect(uml::Activity)»
«ENDDEFINE»


«DEFINE StateMachineRoot FOR uml::Activity»
	
	«FILE getWorkflowPathForFile() + "Base.java" -»
		
	package «getWebPackageName()»;
		
	«EXPAND genImports FOR this»

	public class «name.toFirstUpper()»Base extends BaseJbpmProcessAction implements java.io.Serializable{
	
		«EXPAND genToken FOR this»
		
		«EXPAND genAction FOREACH allOwnedElements().typeSelect(uml::Action)»
	
	}
	«ENDFILE»
	«EXPAND ManualGen » 
	
	«EXPAND genAssignmentHandler(this) FOREACH allOwnedElements().typeSelect(uml::ActivityPartition)»
	«EXPAND genDecisionHandler(this) FOREACH allOwnedElements().typeSelect(uml::DecisionNode)»
	
«ENDDEFINE»

«DEFINE genToken FOR wcprofile::WorkflowActivity»
	«FOREACH getAllAttributes() AS a»
		@Out(scope = ScopeType.BUSINESS_PROCESS, required = false)
		protected «a.type.fqn()» «a.name» = new «a.type.fqn()»();
		
		public void set«a.name.toFirstUpper()»(«a.type.fqn()» «a.name»){
			this.«a.name» = «a.name»
		}
		
		public void get«a.name.toFirstUpper()»(){
			return this.«a.name»
		}
	«ENDFOREACH»

«ENDDEFINE»


«DEFINE genToken FOR uml::Activity»
«ENDDEFINE»



«DEFINE genAssignmentHandler(uml::Activity act) FOR uml::ActivityPartition  »
 «FILE  act.getWorkflowActionPath() +   "/assign/" + name.toFirstUpper()  + "Assignment.java"   man_path»
	package «act.getWebPackageName()+ "." + act.name.toFirstLower() + ".assign"»;
	
	import org.jboss.seam.Component;
	import org.jbpm.graph.exe.ExecutionContext;
	import org.jbpm.taskmgmt.def.AssignmentHandler;
	import org.jbpm.taskmgmt.exe.Assignable;
	
	
	public class «name.toFirstUpper() + "Assignment"» implements AssignmentHandler {
	
		public void assign(Assignable assignable, ExecutionContext executionContext)
				throws Exception {
				
		}
		
	}
 «ENDFILE»
«ENDDEFINE»

«DEFINE genDecisionHandler(uml::Activity act) FOR uml::DecisionNode »
 «FILE  act.getWorkflowActionPath() +   "/decisions/" + name.toFirstUpper()  + "DecisionHandler.java"  man_path »
	package «act.getWebPackageName()+ "." + act.name.toFirstLower() + ".decisions"»;
	
	import org.jboss.seam.Component;
	import org.jbpm.graph.exe.ExecutionContext;
	
	import org.jbpm.graph.exe.ExecutionContext;
	import org.jbpm.graph.node.DecisionHandler;

	public class «name.toFirstUpper()»DecisionHandler implements DecisionHandler{
		public String decide(ExecutionContext executionContext) throws Exception { 
			return "";
			
		}
	}
 «ENDFILE»
«ENDDEFINE»



«DEFINE genAction FOR uml::Action»
	@StartTask
	public void start«name.toFirstUpper().removeSpaces()»Task() {
		
	}
	
	«FOREACH outgoing() AS o-»
	@EndTask(transition = "«o.getTransName()»")
	public void «o.getTransName()»«name.toFirstUpper().removeSpaces()»Task() {
		
	}
	«ENDFOREACH»
«ENDDEFINE»


«DEFINE genImports FOR uml::Activity»
	import org.jboss.seam.ScopeType;
	import org.jboss.seam.annotations.In;
	import org.jboss.seam.annotations.Name;
	import org.jboss.seam.annotations.Out;
	import org.jboss.seam.annotations.bpm.CreateProcess;
	import org.jboss.seam.annotations.bpm.EndTask;
	import org.jboss.seam.annotations.bpm.StartTask;
	import org.jbpm.JbpmContext;
	import org.witchcraft.jbpm.BaseJbpmProcessAction;
«ENDDEFINE»


«DEFINE ManualGen FOR uml::Activity»
	«FILE  getWorkflowPathForFile() + ".java"  man_path »
	
package « getWebPackageName() »;

«EXPAND genImports»

@Name("«name.toFirstLower()»ProcessAction")	
//@Scope(ScopeType.CONVERSATION)
public class «name.toFirstUpper()» extends «name.toFirstUpper()»Base {

	@CreateProcess(definition = "«name»")
	public void startProcess() {
	
	}
	
}
	«ENDFILE»
«ENDDEFINE»





