«IMPORT wcprofile»

«EXTENSION org::openarchitectureware::uml2::profile::profiling»
«EXTENSION template::GeneratorExtensions»
«EXTENSION template::webExtensions»
«EXTENSION template::associationExtensions»

«DEFINE genView FOR uml::Class»
	«FILE getWebPath() +"/list" +name+ "." + getExtension()»
		<ui:composition «EXPAND WebRoot::genIncludes» template="«getAdminTemplate()»"  >	
			«setAsCurrentEntity(this)-»
			«clearCurrentEmbeddable()-»
			<ui:define name="content">
				<ui:include src="search«name».«getExtension()»" />
				<br/> <br/>
				<ui:include src="list«name»Component.«getExtension()»" >
					<ui:param name="records" value="#{«asVar()»List.resultList}" />
         		</ui:include>
				
				<a:form>
				<s:button value="Create New" view="«getViewFile("edit")»" propagation="none"  />
					<a:commandButton action="#{«asVar()»Action.set«name»Id(0)}" 
						oncomplete="Richfaces.showModalPanel('«name»ModalPanel',{});" value="Quick Create" >
					</a:commandButton>
				</a:form>
				«IF templatable»
				 <s:button value="Create Template" view="«getTemplateViewFileName("edit")»"/>
				 «ENDIF»
				<ui:include src="«getComponentViewFile("modalDlg")»" />
			</ui:define>
		</ui:composition>
			«ENDFILE»
			«EXPAND genViewComponent FOR this»
			«EXPAND auditListRoot::genAuditLogComponent FOR this»
			«EXPAND modelDlg::genModelDlgComponent FOR this»
		«ENDDEFINE»
		
		«DEFINE genViewComponent FOR uml::Class»
			«FILE getWebPath() +"/list" +name+ "Component." + getExtension()»
		<ui:composition «EXPAND WebRoot::genIncludes-» >	
			
		<rich:panel>
		   <f:facet name="header">«name» Search Results (#{empty records ? 0 : («asVar()»List.paginated ? «asVar()»List.resultCount : records.size)})</f:facet>
		   <a:form>
			
				<rich:dataTable  var="_«asVar()»" value="#{records}"  id="«name.toFirstLower()»List"
				rowClasses="odd, even" styleClass="dataTable"  rendered="#{not empty records}">	
				«EXPAND genId FOR this-»	
				«EXPAND genAttribAsOutput FOR this-»
				«EXPAND genPropsFromBusinessEntity FOR this-»
				«EXPAND genCreationDate FOR this-»	
				«EXPAND genLink("view", "eye.png") FOR this»
				«EXPAND genLink ("edit", "edit.png")FOR this»
				«EXPAND genDeleteLink FOR this»
				«EXPAND genQuickEditLink FOR this»
				</rich:dataTable>
		 	</a:form>		
		</rich:panel>	
		
		«EXPAND paginationLinks FOR this»
		
		</ui:composition>
	«ENDFILE»
«ENDDEFINE»


«DEFINE paginationLinks FOR wcprofile::Entity»
 <div class="tableControl">
<s:link
	view="#{request.servletPath}"
	rendered="#{«asVar()»List.previousExists}"
	value="#{messages.left}#{messages.left} First Page" >
	<f:param name="firstResult" value="0" />
</s:link> 

<s:link view="#{request.servletPath}"
	rendered="#{«asVar()»List.previousExists}"
	value="#{messages.left} Previous Page" >
	<f:param name="firstResult" value="#{«asVar()»List.previousFirstResult}" />
</s:link> 

<s:link view="#{request.servletPath}"
	rendered="#{«asVar()»List.nextExists}"
	value="Next Page #{messages.right}" >
	<f:param name="firstResult" value="#{«asVar()»List.nextFirstResult}" />
</s:link> 

<s:link view="#{request.servletPath}"
	rendered="#{«asVar()»List.nextExists}"
	value="Last Page #{messages.right}#{messages.right}" >
	<f:param name="firstResult" value="#{«asVar()»List.lastFirstResult}" />
</s:link>
</div>
«ENDDEFINE»

«DEFINE genPropsFromBusinessEntity FOR wcprofile::Entity»
	«IF fieldsFromSuperClass != null»	
	«EXPAND genProperty FOREACH getStringsAsList(fieldsFromSuperClass)»
	«ENDIF»
«ENDDEFINE»



«DEFINE genAttribAsOutput FOR uml::Class-»
	«FOREACH allParents() AS e-»
	 «EXPAND genPropertyRec FOREACH e.getAllAttributes().select(a|!a.isMultivalued() && !a.isSecret()  ) -»
	«ENDFOREACH»
	«EXPAND genPropertyRec FOREACH getAllAttributes().select(a|!a.isMultivalued() && !a.isSecret()   ) -»
«ENDDEFINE»

«DEFINE genPropertyRec FOR uml::Property-»
	«IF isExpandableAssoc() -» 
		«setCurrentEmbeddable()-» 
		«EXPAND genPropertyRec FOREACH type.getAllAttributes().select(a|!a.isMultivalued() && !a.isSecret()  ) -»
		«clearCurrentEmbeddable()-»
	«ELSE-»
		«EXPAND genAttribute -»
	«ENDIF»
«ENDDEFINE»

«DEFINE genAttribute FOR uml::Property -»
	«IF association != null -»
		«EXPAND genAssociation FOR this-»
	«ELSE-»
		«EXPAND genProperty FOR this-»
	«ENDIF»
«ENDDEFINE»

«DEFINE genLink(String action, String icon) FOR uml::Class»
	<h:column>
		<f:facet name="header">
			<h:outputText value=" " />
		</f:facet>
		<s:link view="«getViewFile(action)»"  rendered="#{s:hasPermission(_«asVar()», '«action»')}" propagation="none">
			<h:graphicImage value="/images/icons/«icon»" style="border: 0px" alt="«action»"/>
			<f:param name="«asVar()»Id" value="#{_«asVar()».id}" />
		</s:link>
	</h:column>
«ENDDEFINE»

«DEFINE genQuickEditLink FOR uml::Class»
	<h:column >
		<f:facet name="header">
			<h:outputText value=" " />
		</f:facet>
		<a:commandLink action="#{«asVar()»Action.set«name»IdForModalDlg(_«asVar()».id)}"  rendered="#{s:hasPermission(_«asVar()», 'edit')}" 
			oncomplete="Richfaces.showModalPanel('«name»ModalPanel',{});" value="Quick Edit" /> 
	</h:column>
«ENDDEFINE»



«DEFINE genDeleteLink FOR uml::Class»
	<h:column rendered="#{s:hasPermission('«asVar()»Action', 'archive')}" propagation="none">
		<f:facet name="header">
			<h:outputText value="" />
		</f:facet>
		
		<s:link action="#{«asVar()»Action.archiveById}" onclick="javascript:if(!confirm('Do you really want to delete #{_«asVar()».displayName} ?')){ return false; } else { return true; }" >
			<h:graphicImage value="/images/icons/delete.png" style="border: 0px" alt="archive"/>
			<f:param name="idToArchive" value="#{_«asVar()».id}"/>
		</s:link>
	</h:column>
«ENDDEFINE»

«DEFINE genAssociation FOR uml::Property»
	<h:column «IF isCompositionContainer()» groupOn="#{«genPropertyLabel()».displayName}" «ENDIF»    «EXPAND genPermission FOR this»>
		<f:facet name="header">
			<ui:include src="/layout/sort.xhtml">
				<ui:param name="entityList" value="#{«getCurrentEntity().asVar()»List}" />
				<ui:param name="propertyLabel" value="«msgBundleKey()-»" />
				<ui:param name="propertyPath" value="«genPropertyLabel()»" />
			</ui:include>
		</f:facet>
		«EXPAND genAssoc FOR this»
	</h:column>
«ENDDEFINE»


«DEFINE genAssoc FOR uml::Property»
	<s:link «getEscape()»  value="#{_«genPropertyLabel()».displayName}"  view="«type.getViewFile("view")»" propagation="none">
			<f:param name="«name»Id" value="#{_«genPropertyLabel()».id}" />
			<f:param name="from" value="#{request.servletPath}" />
			«IF type.popupInfo != null»
			 <rich:toolTip>
	            <span>
	              #{_«genPropertyLabel()».popupInfo} 
	            </span>
	        </rich:toolTip>
	        «ENDIF»
	</s:link>
«ENDDEFINE»



«DEFINE genProperty FOR uml::Property-»
	<h:column   «EXPAND genPermission FOR this»>
		<f:facet name="header">
			<ui:include src="/layout/sort.xhtml">
				<ui:param name="entityList" value="#{«getCurrentEntity().asVar()»List}" />
				<ui:param name="propertyLabel" value="«msgBundleKey()-»" />
				<ui:param name="propertyPath" value="«genPropertyLabel()»" />
			</ui:include>
		</f:facet>
		«IF isFile()»
			<s:link value="#{_«genPropertyLabel()».name}"  action="#{«class.asVar()»Action.download«name.toFirstUpper()»(_«class.asVar()».id)}" propagation="none" >
				<f:param name="currentEntityId" value="#{_«class.asVar()».id}" />
          </s:link> 
		«ELSEIF isDate()»
			<h:outputText value="#{_«genPropertyLabel()»}">
				<s:convertDateTime type="both" dateStyle="short" />
			</h:outputText>
		«ELSE»
			<h:outputText value="#{_«genPropertyLabel()»}" />	
		«ENDIF»
	</h:column>
«ENDDEFINE»

«DEFINE genProperty FOR String-»
	<h:column  «EXPAND genPermission FOR this»>
		<f:facet name="header">
			<h:outputText value="«msgBundleKey()-»" />
		</f:facet>
	 <h:outputText value="#{«getCurrentEntity().asVar()».«this»«this == "createdByUser"?".displayName":""»}" />
	</h:column>
«ENDDEFINE»

«DEFINE genPermission FOR uml::Property»
	rendered="#{s:hasPermission('«name»', '«getCurrentEntity().asVar()»View'  )}"
«ENDDEFINE»

«DEFINE genPermission FOR String»
	rendered="#{s:hasPermission('«this»', '«getCurrentEntity().asVar()»View' )}"
«ENDDEFINE»



«REM» Creation date and ID  «ENDREM»


«DEFINE genId FOR uml::Class»
	<h:column >
		<f:facet name="header">
			<ui:include src="/layout/sort.xhtml">
				<ui:param name="entityList" value="#{«getCurrentEntity().asVar()»List}" />
				<ui:param name="propertyLabel" value="Id" />
				<ui:param name="propertyPath" value="«getCurrentEntity().asVar()».id" />
			</ui:include>
		</f:facet>
		<h:outputText    value="#{_«getCurrentEntity().asVar()».id}"  >
		</h:outputText>
	</h:column>
«ENDDEFINE»


«DEFINE genCreationDate FOR uml::Class»
	<h:column >
		<f:facet name="header">
			<ui:include src="/layout/sort.xhtml">
				<ui:param name="entityList" value="#{«getCurrentEntity().asVar()»List}" />
				<ui:param name="propertyLabel" value="Creation Date" />
				<ui:param name="propertyPath" value="«getCurrentEntity().asVar()».dateCreated" />
			</ui:include>
		</f:facet>
		<h:outputText    value="#{_«getCurrentEntity().asVar()».dateCreated}"  >
			<s:convertDateTime type="both" dateStyle="short" />
		</h:outputText>
	</h:column>
«ENDDEFINE»



