import uml;
import java;
import wcprofile;

extension org::openarchitectureware::uml2::profile::profiling;
extension template::GeneratorExtensions;


getFieldType(Property prop):
 prop.type.isPrimitive() ? getFieldTypeForReports(prop.type.name) : prop.type.fqn();

	

getGroupName(ReportGroup grp):
grp.groupId == null ? grp.name : grp.groupId;


genFieldExpr(uml::Property p, uml::PrimitiveType t):
p.name ;
	
genFieldExpr(uml::Property p, uml::Enumeration t):
p.name + ".displayName";

genFieldExpr(uml::Property p, uml::Class t):
p.name + ".displayName";

//get all fields in the detail section
getAllReportFields(wcprofile::Report r):
r.getAllAttributes().select(a|a.getAppliedStereotypes().size == 0 || a.getAppliedStereotype("wcprofile::ReportField") != null);


getCalculation(String t ):
JAVA org.wc.generatorutil.ClassUtil.getCalc(java.lang.String);

getField(String t ):
JAVA org.wc.generatorutil.ClassUtil.getField(java.lang.String);

getFieldTypeForReports(String t):
JAVA org.wc.generatorutil.ClassUtil.getFieldTypeForReports(java.lang.String);
 

genFieldExpr(uml::Property p, uml::PrimitiveType t):
p.name;

getFieldWidth(uml::Property p):
600/p.class.getAllReportFields().size;

	
getQueryLanguage(Report report):
report.queryLanguage == null ? getDefaultQueryLanguage() : report.queryLanguage;

getDefaultQueryLanguage():// 
"ejbql";
