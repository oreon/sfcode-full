package org.caisi.persistence.model;
// Generated Dec 16, 2008 8:00:57 AM by Hibernate Tools 3.2.2.GA

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.caisi.persistence.base.BusinessEntity;
import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

/**
 * Integratorconsent generated by hbm2java
 */
@Entity
@Table(name = "integratorconsent")
public class Integratorconsent extends BusinessEntity implements java.io.Serializable {

	private Integer id;
	private Demographic demographic;
	private Provider provider;
	private Facility facility;
	private Date createdDate;
	private boolean consentToStatistics;
	private boolean consentToBasicPersonalId;
	private boolean consentToHealthCardId;
	private boolean consentToIssues;
	private boolean consentToNotes;
	private boolean consentToPreventions;
	private boolean consentToPhoto;
	private boolean restrictConsentToHic;
	private String formVersion;
	private String printedFormLocation;
	private boolean refusedToSign;

	public Integratorconsent() {
	}

	public Integratorconsent(Demographic demographic, Provider provider,
			Facility facility, Date createdDate, boolean consentToStatistics,
			boolean consentToBasicPersonalId, boolean consentToHealthCardId,
			boolean consentToIssues, boolean consentToNotes,
			boolean consentToPreventions, boolean consentToPhoto,
			boolean restrictConsentToHic, boolean refusedToSign) {
		this.demographic = demographic;
		this.provider = provider;
		this.facility = facility;
		this.createdDate = createdDate;
		this.consentToStatistics = consentToStatistics;
		this.consentToBasicPersonalId = consentToBasicPersonalId;
		this.consentToHealthCardId = consentToHealthCardId;
		this.consentToIssues = consentToIssues;
		this.consentToNotes = consentToNotes;
		this.consentToPreventions = consentToPreventions;
		this.consentToPhoto = consentToPhoto;
		this.restrictConsentToHic = restrictConsentToHic;
		this.refusedToSign = refusedToSign;
	}
	public Integratorconsent(Demographic demographic, Provider provider,
			Facility facility, Date createdDate, boolean consentToStatistics,
			boolean consentToBasicPersonalId, boolean consentToHealthCardId,
			boolean consentToIssues, boolean consentToNotes,
			boolean consentToPreventions, boolean consentToPhoto,
			boolean restrictConsentToHic, String formVersion,
			String printedFormLocation, boolean refusedToSign) {
		this.demographic = demographic;
		this.provider = provider;
		this.facility = facility;
		this.createdDate = createdDate;
		this.consentToStatistics = consentToStatistics;
		this.consentToBasicPersonalId = consentToBasicPersonalId;
		this.consentToHealthCardId = consentToHealthCardId;
		this.consentToIssues = consentToIssues;
		this.consentToNotes = consentToNotes;
		this.consentToPreventions = consentToPreventions;
		this.consentToPhoto = consentToPhoto;
		this.restrictConsentToHic = restrictConsentToHic;
		this.formVersion = formVersion;
		this.printedFormLocation = printedFormLocation;
		this.refusedToSign = refusedToSign;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "demographicId", nullable = false)
	@NotNull
	public Demographic getDemographic() {
		return this.demographic;
	}

	public void setDemographic(Demographic demographic) {
		this.demographic = demographic;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "providerNo", nullable = false)
	@NotNull
	public Provider getProvider() {
		return this.provider;
	}

	public void setProvider(Provider provider) {
		this.provider = provider;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "facilityId", nullable = false)
	@NotNull
	public Facility getFacility() {
		return this.facility;
	}

	public void setFacility(Facility facility) {
		this.facility = facility;
	}
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "createdDate", nullable = false, length = 19)
	@NotNull
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Column(name = "consentToStatistics", nullable = false)
	@NotNull
	public boolean isConsentToStatistics() {
		return this.consentToStatistics;
	}

	public void setConsentToStatistics(boolean consentToStatistics) {
		this.consentToStatistics = consentToStatistics;
	}

	@Column(name = "consentToBasicPersonalId", nullable = false)
	@NotNull
	public boolean isConsentToBasicPersonalId() {
		return this.consentToBasicPersonalId;
	}

	public void setConsentToBasicPersonalId(boolean consentToBasicPersonalId) {
		this.consentToBasicPersonalId = consentToBasicPersonalId;
	}

	@Column(name = "consentToHealthCardId", nullable = false)
	@NotNull
	public boolean isConsentToHealthCardId() {
		return this.consentToHealthCardId;
	}

	public void setConsentToHealthCardId(boolean consentToHealthCardId) {
		this.consentToHealthCardId = consentToHealthCardId;
	}

	@Column(name = "consentToIssues", nullable = false)
	@NotNull
	public boolean isConsentToIssues() {
		return this.consentToIssues;
	}

	public void setConsentToIssues(boolean consentToIssues) {
		this.consentToIssues = consentToIssues;
	}

	@Column(name = "consentToNotes", nullable = false)
	@NotNull
	public boolean isConsentToNotes() {
		return this.consentToNotes;
	}

	public void setConsentToNotes(boolean consentToNotes) {
		this.consentToNotes = consentToNotes;
	}

	@Column(name = "consentToPreventions", nullable = false)
	@NotNull
	public boolean isConsentToPreventions() {
		return this.consentToPreventions;
	}

	public void setConsentToPreventions(boolean consentToPreventions) {
		this.consentToPreventions = consentToPreventions;
	}

	@Column(name = "consentToPhoto", nullable = false)
	@NotNull
	public boolean isConsentToPhoto() {
		return this.consentToPhoto;
	}

	public void setConsentToPhoto(boolean consentToPhoto) {
		this.consentToPhoto = consentToPhoto;
	}

	@Column(name = "restrictConsentToHic", nullable = false)
	@NotNull
	public boolean isRestrictConsentToHic() {
		return this.restrictConsentToHic;
	}

	public void setRestrictConsentToHic(boolean restrictConsentToHic) {
		this.restrictConsentToHic = restrictConsentToHic;
	}

	@Column(name = "formVersion", length = 32)
	@Length(max = 32)
	public String getFormVersion() {
		return this.formVersion;
	}

	public void setFormVersion(String formVersion) {
		this.formVersion = formVersion;
	}

	@Column(name = "printedFormLocation")
	public String getPrintedFormLocation() {
		return this.printedFormLocation;
	}

	public void setPrintedFormLocation(String printedFormLocation) {
		this.printedFormLocation = printedFormLocation;
	}

	@Column(name = "refusedToSign", nullable = false)
	@NotNull
	public boolean isRefusedToSign() {
		return this.refusedToSign;
	}

	public void setRefusedToSign(boolean refusedToSign) {
		this.refusedToSign = refusedToSign;
	}

	@Override
	@Transient
	public Integer getEntityId() {
		return getId();
	}

}
