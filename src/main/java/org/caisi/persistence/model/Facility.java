package org.caisi.persistence.model;
// Generated Dec 16, 2008 8:00:57 AM by Hibernate Tools 3.2.2.GA

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;

import org.caisi.persistence.base.BusinessEntity;
import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

/**
 * Facility generated by hbm2java
 */
@Entity
@Table(name = "facility", uniqueConstraints = @UniqueConstraint(columnNames = "name"))
public class Facility extends BusinessEntity implements java.io.Serializable {

	
	
	private Integer id;
	private String name;
	private String description;
	private String contactName;
	private String contactEmail;
	private String contactPhone;
	private boolean hic;
	private boolean disabled;
	private int orgId;
	private int sectorId;
	private boolean integratorEnabled;
	private String integratorUrl;
	private String integratorUser;
	private String integratorPassword;
	private Date integratorLastPushTime;
	private boolean allowQuickConsent;
	private boolean enableIntegratedReferrals;
	private Set<Integratorconsent> integratorconsents = new HashSet<Integratorconsent>(
			0);

	public Facility() {
	}

	public Facility(String name, String description, boolean hic,
			boolean disabled, int orgId, int sectorId,
			boolean integratorEnabled, boolean allowQuickConsent,
			boolean enableIntegratedReferrals) {
		this.name = name;
		this.description = description;
		this.hic = hic;
		this.disabled = disabled;
		this.orgId = orgId;
		this.sectorId = sectorId;
		this.integratorEnabled = integratorEnabled;
		this.allowQuickConsent = allowQuickConsent;
		this.enableIntegratedReferrals = enableIntegratedReferrals;
	}
	public Facility(String name, String description, String contactName,
			String contactEmail, String contactPhone, boolean hic,
			boolean disabled, int orgId, int sectorId,
			boolean integratorEnabled, String integratorUrl,
			String integratorUser, String integratorPassword,
			Date integratorLastPushTime, boolean allowQuickConsent,
			boolean enableIntegratedReferrals,
			Set<Integratorconsent> integratorconsents) {
		this.name = name;
		this.description = description;
		this.contactName = contactName;
		this.contactEmail = contactEmail;
		this.contactPhone = contactPhone;
		this.hic = hic;
		this.disabled = disabled;
		this.orgId = orgId;
		this.sectorId = sectorId;
		this.integratorEnabled = integratorEnabled;
		this.integratorUrl = integratorUrl;
		this.integratorUser = integratorUser;
		this.integratorPassword = integratorPassword;
		this.integratorLastPushTime = integratorLastPushTime;
		this.allowQuickConsent = allowQuickConsent;
		this.enableIntegratedReferrals = enableIntegratedReferrals;
		this.integratorconsents = integratorconsents;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "name", unique = true, nullable = false, length = 50)
	@NotNull
	@Length(max = 50)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "description", nullable = false, length = 150)
	@NotNull
	@Length(max = 150)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "contactName")
	public String getContactName() {
		return this.contactName;
	}

	public void setContactName(String contactName) {
		this.contactName = contactName;
	}

	@Column(name = "contactEmail")
	public String getContactEmail() {
		return this.contactEmail;
	}

	public void setContactEmail(String contactEmail) {
		this.contactEmail = contactEmail;
	}

	@Column(name = "contactPhone")
	public String getContactPhone() {
		return this.contactPhone;
	}

	public void setContactPhone(String contactPhone) {
		this.contactPhone = contactPhone;
	}

	@Column(name = "hic", nullable = false)
	@NotNull
	public boolean isHic() {
		return this.hic;
	}

	public void setHic(boolean hic) {
		this.hic = hic;
	}

	@Column(name = "disabled", nullable = false)
	@NotNull
	public boolean isDisabled() {
		return this.disabled;
	}

	public void setDisabled(boolean disabled) {
		this.disabled = disabled;
	}

	@Column(name = "orgId", nullable = false)
	@NotNull
	public int getOrgId() {
		return this.orgId;
	}

	public void setOrgId(int orgId) {
		this.orgId = orgId;
	}

	@Column(name = "sectorId", nullable = false)
	@NotNull
	public int getSectorId() {
		return this.sectorId;
	}

	public void setSectorId(int sectorId) {
		this.sectorId = sectorId;
	}

	@Column(name = "integratorEnabled", nullable = false)
	@NotNull
	public boolean isIntegratorEnabled() {
		return this.integratorEnabled;
	}

	public void setIntegratorEnabled(boolean integratorEnabled) {
		this.integratorEnabled = integratorEnabled;
	}

	@Column(name = "integratorUrl")
	public String getIntegratorUrl() {
		return this.integratorUrl;
	}

	public void setIntegratorUrl(String integratorUrl) {
		this.integratorUrl = integratorUrl;
	}

	@Column(name = "integratorUser")
	public String getIntegratorUser() {
		return this.integratorUser;
	}

	public void setIntegratorUser(String integratorUser) {
		this.integratorUser = integratorUser;
	}

	@Column(name = "integratorPassword")
	public String getIntegratorPassword() {
		return this.integratorPassword;
	}

	public void setIntegratorPassword(String integratorPassword) {
		this.integratorPassword = integratorPassword;
	}
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "integratorLastPushTime", length = 19)
	public Date getIntegratorLastPushTime() {
		return this.integratorLastPushTime;
	}

	public void setIntegratorLastPushTime(Date integratorLastPushTime) {
		this.integratorLastPushTime = integratorLastPushTime;
	}

	@Column(name = "allowQuickConsent", nullable = false)
	@NotNull
	public boolean isAllowQuickConsent() {
		return this.allowQuickConsent;
	}

	public void setAllowQuickConsent(boolean allowQuickConsent) {
		this.allowQuickConsent = allowQuickConsent;
	}

	@Column(name = "enableIntegratedReferrals", nullable = false)
	@NotNull
	public boolean isEnableIntegratedReferrals() {
		return this.enableIntegratedReferrals;
	}

	public void setEnableIntegratedReferrals(boolean enableIntegratedReferrals) {
		this.enableIntegratedReferrals = enableIntegratedReferrals;
	}
	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "facility")
	public Set<Integratorconsent> getIntegratorconsents() {
		return this.integratorconsents;
	}

	public void setIntegratorconsents(Set<Integratorconsent> integratorconsents) {
		this.integratorconsents = integratorconsents;
	}

	@Override
	@Transient	
	public Integer getEntityId() {
		// TODO Auto-generated method stub
		return getId();
	}

}
