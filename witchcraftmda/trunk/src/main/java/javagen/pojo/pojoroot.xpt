«IMPORT wcprofile»



«EXTENSION org::openarchitectureware::uml2::profile::profiling»
«EXTENSION template::GeneratorExtensions»
«EXTENSION template::associationExtensions»
«EXTENSION template::javaextensions»


«DEFINE root FOR uml::Model»
	«EXPAND PackageRoot FOREACH allOwnedElements().typeSelect(uml::Package)»
«ENDDEFINE»

«DEFINE PackageRoot FOR uml::Package»
	«IF !excludeFromGeneration()»
		«EXPAND PackageRoot FOREACH  eContents().typeSelect(uml::Package)»
		«EXPAND ClassRoot FOREACH eContents().typeSelect(uml::Class)»
		«EXPAND ClassRoot FOREACH eContents().typeSelect(uml::Interface)»
		«EXPAND EnumGen FOREACH eContents().typeSelect(uml::Enumeration)»
		«EXPAND GenPackageInfo FOR this»
	«ENDIF»
«ENDDEFINE»

«DEFINE ClassRoot FOR uml::Class»
 «IF name != null && package != null»
	
	«FILE packagePath() +"/" + name + "Base.java"»
		
		package « packageName() »;
		«EXPAND genImports FOR this»
	
		«EXPAND genClassDocs FOR this»
		
		«EXPAND genBaseClassAnnotations FOR this»
		public class «name» «getParent()» «getInterfaces()»{
		
		 «EXPAND genDecl FOREACH getAllAttributes()»

		 «EXPAND genGetterSetter FOREACH getAllAttributes()»
			
		}
	«ENDFILE»
	
	
	«FILE packagePath() +"/" +name+".java" man_path»
		«EXPAND genFileHeader FOR this»
		package « packageName() »;
	
		«REM»comment
		«EXPAND genImports FOR this»
		«ENDREM»
		«EXPAND genClassBodyMan FOR this»
	«ENDFILE»
	
	
 «ENDIF»
«ENDDEFINE»


«DEFINE genClassBodyMan FOR uml::Class»
	«EXPAND genClassAnnotations FOR this»
	public class «name» extends «name»Base implements java.io.Serializable {
		private static final long serialVersionUID = «serialver()»;
	}
«ENDDEFINE»



«DEFINE genDecl FOR wcprofile::DerivedProperty»
«ENDDEFINE»

«DEFINE genDecl FOR wcprofile::DerivedFormula»
«ENDDEFINE»


«DEFINE genDecl FOR uml::Property»
	«EXPAND genPropertyAnnotations FOR this»
	protected «getCollectionBeginPartIfNeeded()»«type.fqnForPackage(this.class)»«getCollectionEndPartIfNeeded()» «name»; «REM»comment = new ArrayList<«type.fqnForPackage(this.class)»>();«ENDREM»
«ENDDEFINE»


«DEFINE genGetterSetter FOR uml::Property»
	public void set«name.toFirstUpper()»(«getCollectionBeginPartIfNeeded()»«type.fqnForPackage(this.class)»«getCollectionEndPartIfNeeded()» «name»){
		this.«name» = «name»;
	}
	
	public «getCollectionBeginPartIfNeeded()»«type.fqnForPackage(this.class)»«getCollectionEndPartIfNeeded()»  get«name.toFirstUpper()»( ){
		return «name»;
	}
«ENDDEFINE»



	

«DEFINE genClassAnnotations FOR uml::Class»
	
«ENDDEFINE»

«DEFINE genBaseClassAnnotations FOR uml::Class»
	
«ENDDEFINE»


«DEFINE genPropertyAnnotations FOR uml::Property»
	
«ENDDEFINE»


«DEFINE genFileHeader FOR uml::Element»
«ENDDEFINE»

«DEFINE genClassDocs FOR wcprofile::Entity»
//this is entity docs
«ENDDEFINE»

«DEFINE genClassDocs FOR uml::Class»
//simple class
«ENDDEFINE»



«DEFINE GenPackageInfo FOR uml::Package»
 «IF !name.startsWith("UML")»
	
	 «FILE packagePathPck() +"/package-info.java"  »
		«EXPAND genFileHeader FOR this»
		package «packageNamePck()»; 
	 «ENDFILE»
	
 «ENDIF»
«ENDDEFINE»






«DEFINE genImports FOR uml::Type»
	import java.util.ArrayList;
	import java.util.List;
	import java.util.Date;
«ENDDEFINE»



«DEFINE EnumGen FOR uml::Enumeration»
	«FILE packagePath() + "/"+ name +".java"»  
	package «packageName()»;
	
	public enum «name» {		
		«FOREACH  ownedLiteral AS e»
			«e.name»,
		«ENDFOREACH»
	} 
	«ENDFILE»
«ENDDEFINE»




